{"remainingRequest":"P:\\bm_admin\\node_modules\\thread-loader\\dist\\cjs.js!P:\\bm_admin\\node_modules\\babel-loader\\lib\\index.js!P:\\bm_admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!P:\\bm_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!P:\\bm_admin\\src\\views\\login\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"P:\\bm_admin\\src\\views\\login\\login.vue","mtime":1616307068000},{"path":"P:\\bm_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"P:\\bm_admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"P:\\bm_admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"P:\\bm_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"P:\\bm_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}