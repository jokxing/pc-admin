{"remainingRequest":"G:\\bm_admin\\node_modules\\thread-loader\\dist\\cjs.js!G:\\bm_admin\\node_modules\\babel-loader\\lib\\index.js!G:\\bm_admin\\src\\router\\index.js","dependencies":[{"path":"G:\\bm_admin\\src\\router\\index.js","mtime":1620047168000},{"path":"G:\\bm_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\bm_admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\bm_admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBWdWVSb3V0ZXIgZnJvbSAndnVlLXJvdXRlcic7ClZ1ZS51c2UoVnVlUm91dGVyKTsKdmFyIHJvdXRlcyA9IFt7CiAgcGF0aDogJy8nLAogIG5hbWU6ICcnLAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvaW5kZXgudnVlJ10sIHJlc29sdmUpOwogIH0sCiAgcmVkaXJlY3Q6ICcvaG9tZScsCiAgbWV0YTogewogICAgcmVxdWlyZUF1dGg6IHRydWUKICB9LAogIGNoaWxkcmVuOiBbewogICAgcGF0aDogJy9ob21lJywKICAgIG5hbWU6ICfpppbpobUnLAogICAgbWV0YTogewogICAgICByZXF1aXJlQXV0aDogdHJ1ZQogICAgfSwKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgICAgcmV0dXJuIHJlcXVpcmUoWycuLi92aWV3cy9ob21lL2hvbWUudnVlJ10sIHJlc29sdmUpOwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvbm90aWNlJywKICAgIG5hbWU6ICflhazlkYonLAogICAgbWV0YTogewogICAgICByZXF1aXJlQXV0aDogdHJ1ZQogICAgfSwKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgICAgcmV0dXJuIHJlcXVpcmUoWycuLi92aWV3cy9ub3RpY2Uvbm90aWNlLnZ1ZSddLCByZXNvbHZlKTsKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL25vdGljZS9ub3RpY2VEZXRhaWxzLzppZCcsCiAgICBuYW1lOiAn5YWs5ZGK6K+m5oOFJywKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZUF1dGg6IHRydWUKICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3Mvbm90aWNlL25vdGljZURldGFpbHMudnVlJ10sIHJlc29sdmUpOwogICAgfQogIH0sIC8vIOeuoeeQhuS4reW/gwogIHsKICAgIHBhdGg6ICcvbWVtYmVyTGlzdCcsCiAgICBuYW1lOiAn5Lya5ZGY566h55CGJywKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZUF1dGg6IHRydWUKICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvbWFuYWdlbWVudC9tZW1iZXJMaXN0LnZ1ZSddLCByZXNvbHZlKTsKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2xvd2VyTGV2ZWxNZW1iZXJMaXN0JywKICAgIG5hbWU6ICdsb3dlckxldmVsTWVtYmVyTGlzdCcsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVBdXRoOiB0cnVlCiAgICB9LAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocmVzb2x2ZSkgewogICAgICByZXR1cm4gcmVxdWlyZShbJy4uL3ZpZXdzL21hbmFnZW1lbnQvbG93ZXJMZXZlbE1lbWJlckxpc3QudnVlJ10sIHJlc29sdmUpOwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvY2hlY1VzZXInLAogICAgbmFtZTogJ+S8muWRmOazqOmUgOafpeivoicsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVBdXRoOiB0cnVlLAogICAgICBsZXZlbDogWyczJ10KICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvbWFuYWdlbWVudC9jaGVjVXNlci52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy9jaGFuZ2VMaW5lJywKICAgIG5hbWU6ICfkvJrlkZjovaznur/nlLPor7cnLAogICAgbWV0YTogewogICAgICByZXF1aXJlQXV0aDogdHJ1ZSwKICAgICAgbGV2ZWw6IFsnMyddCiAgICB9LAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocmVzb2x2ZSkgewogICAgICByZXR1cm4gcmVxdWlyZShbJy4uL3ZpZXdzL21hbmFnZW1lbnQvY2hhbmdlTGluZS52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy9jaGFuZ2VMaW5lL2NoYW5nZUxpbmVMb2dzTGlzdCcsCiAgICBuYW1lOiAn6LCD57q/6K6w5b2VJywKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZUF1dGg6IHRydWUsCiAgICAgIGxldmVsOiBbJzMnXQogICAgfSwKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgICAgcmV0dXJuIHJlcXVpcmUoWycuLi92aWV3cy9tYW5hZ2VtZW50L2NoYW5nZUxpbmVMb2dzTGlzdC52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy9jaGFuZ2VMZXZlJywKICAgIG5hbWU6ICfkvJrlkZjosIPnuqfnlLPor7cnLAogICAgbWV0YTogewogICAgICByZXF1aXJlQXV0aDogdHJ1ZSwKICAgICAgbGV2ZWw6IFsnMyddCiAgICB9LAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocmVzb2x2ZSkgewogICAgICByZXR1cm4gcmVxdWlyZShbJy4uL3ZpZXdzL21hbmFnZW1lbnQvY2hhbmdlTGV2ZS52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy9jaGFuZ2VMZXZlL3RyYW5zZm9ybVJlY29yZCcsCiAgICBuYW1lOiAn6LCD57qn6K6w5b2VJywKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZUF1dGg6IHRydWUsCiAgICAgIGxldmVsOiBbJzMnXQogICAgfSwKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgICAgcmV0dXJuIHJlcXVpcmUoWycuLi92aWV3cy9tYW5hZ2VtZW50L3RyYW5zZm9ybVJlY29yZC52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy9hZ2VudFN1Ym9yZGluYXRlJywKICAgIG5hbWU6ICfkuIvnuqfnrqHnkIYnLAogICAgbWV0YTogewogICAgICByZXF1aXJlQXV0aDogdHJ1ZSwKICAgICAgbGV2ZWw6IFsnMScsICcyJ10KICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvbWFuYWdlbWVudC9hZ2VudFN1Ym9yZGluYXRlLnZ1ZSddLCByZXNvbHZlKTsKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2FnZW50U3Vib3JkaW5hdGUvdGhyZWVMZXZlbEFnZW5jeS86aWQnLAogICAgbmFtZTogJ+S4iee6p+S7o+eQhicsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVBdXRoOiB0cnVlLAogICAgICBsZXZlbDogWycxJ10KICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvbWFuYWdlbWVudC90aHJlZUxldmVsQWdlbmN5LnZ1ZSddLCByZXNvbHZlKTsKICAgIH0KICB9LCAvLyDkvJrlkZjorrDlvZUKICB7CiAgICBwYXRoOiAnL2dhbWVSZWNvcmQnLAogICAgbmFtZTogJ2dhbWVSZWNvcmQnLAogICAgbWV0YTogewogICAgICByZXF1aXJlQXV0aDogdHJ1ZSwKICAgICAgbGV2ZWw6IFsnMScsICcyJywgJzMnXQogICAgfSwKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgICAgcmV0dXJuIHJlcXVpcmUoWycuLi92aWV3cy9tZW1iZXJSZWNvcmQvZ2FtZVJlY29yZC52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy9nYW1lUmVjb3JkL21lbWJlckJldERldGFpbHMnLAogICAgbmFtZTogJ+S8muWRmOaKleazqOivpuaDhScsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVBdXRoOiB0cnVlLAogICAgICBsZXZlbDogWycxJywgJzInLCAnMyddCiAgICB9LAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocmVzb2x2ZSkgewogICAgICByZXR1cm4gcmVxdWlyZShbJy4uL3ZpZXdzL21lbWJlclJlY29yZC9tZW1iZXJCZXREZXRhaWxzLnZ1ZSddLCByZXNvbHZlKTsKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL3VzZXJGdW5kJywKICAgIG5hbWU6ICflrZjmj5DmrL7orrDlvZUnLAogICAgbWV0YTogewogICAgICByZXF1aXJlQXV0aDogdHJ1ZSwKICAgICAgbGV2ZWw6IFsnMScsICcyJywgJzMnXQogICAgfSwKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgICAgcmV0dXJuIHJlcXVpcmUoWycuLi92aWV3cy9tZW1iZXJSZWNvcmQvdXNlckZ1bmQudnVlJ10sIHJlc29sdmUpOwogICAgfQogIH0sIC8vIOi0ouWKoeS4reW/gwogIHsKICAgIHBhdGg6ICcvd2l0aGRyYXcnLAogICAgbmFtZTogJ+aPkOeOsOS4k+WMuicsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVBdXRoOiB0cnVlCiAgICB9LAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocmVzb2x2ZSkgewogICAgICByZXR1cm4gcmVxdWlyZShbJy4uL3ZpZXdzL2ZpbmFuY2Uvd2l0aGRyYXcudnVlJ10sIHJlc29sdmUpOwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvd2l0aGRyYXcvZHJhd2luZycsCiAgICBuYW1lOiAnZHJhd2luZycsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVBdXRoOiB0cnVlCiAgICB9LAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocmVzb2x2ZSkgewogICAgICByZXR1cm4gcmVxdWlyZShbJy4uL3ZpZXdzL2ZpbmFuY2UvZHJhd2luZy52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy93aXRoZHJhdy9zYWZldHlWZXJpZmljYXRpb24nLAogICAgbmFtZTogJ+aPkOasvuWuieWFqOmqjOivgScsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVBdXRoOiB0cnVlCiAgICB9LAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocmVzb2x2ZSkgewogICAgICByZXR1cm4gcmVxdWlyZShbJy4uL3ZpZXdzL2ZpbmFuY2Uvc2FmZXR5VmVyaWZpY2F0aW9uLnZ1ZSddLCByZXNvbHZlKTsKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2FnZW50RGVwb3NpdCcsCiAgICBuYW1lOiAn5Lya5ZGY5Luj5a2YJywKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZUF1dGg6IHRydWUsCiAgICAgIGxldmVsOiBbJzMnXQogICAgfSwKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgICAgcmV0dXJuIHJlcXVpcmUoWycuLi92aWV3cy9maW5hbmNlL2FnZW50RGVwQm9uLnZ1ZSddLCByZXNvbHZlKTsKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2FnZW50Qm9udXMnLAogICAgbmFtZTogJ+W9qeelqOi1oOmAgScsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVBdXRoOiB0cnVlLAogICAgICBsZXZlbDogWyczJ10KICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvZmluYW5jZS9hZ2VudERlcEJvbi52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy9hZ2VudEZ1bmRmbG93JywKICAgIG5hbWU6ICfku6PlrZjovazotKborrDlvZUnLAogICAgbWV0YTogewogICAgICByZXF1aXJlQXV0aDogdHJ1ZSwKICAgICAgbGV2ZWw6IFsnMScsICcyJ10KICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvZmluYW5jZS9hZ2VudEZ1bmRmbG93LnZ1ZSddLCByZXNvbHZlKTsKICAgIH0KICB9LCAvLyDmiqXooajkuK3lv4MKICB7CiAgICBwYXRoOiAnL3BheW91dFJlcG9ydCcsCiAgICBuYW1lOiAncGF5b3V0UmVwb3J0JywKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZUF1dGg6IHRydWUsCiAgICAgIGxldmVsOiBbJzEnLCAnMicsICczJ10KICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvcmVwb3J0Q2VudGVyL3BheW91dFJlcG9ydC52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy9wYXlvdXRSZXBvcnQvdGhyZWVQYXlvdXRSZXBvcnQvOmlkJywKICAgIG5hbWU6ICd0aHJlZVBheW91dFJlcG9ydCcsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVBdXRoOiB0cnVlLAogICAgICBsZXZlbDogWycxJ10KICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvcmVwb3J0Q2VudGVyL3RocmVlUGF5b3V0UmVwb3J0IC52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy9wYXlvdXRSZXBvcnQvcGF5b3V0RGV0YWlsZWQnLAogICAgbmFtZTogJ+i+k+i1ouivpue7hicsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVBdXRoOiB0cnVlLAogICAgICBsZXZlbDogWycxJywgJzInLCAnMyddCiAgICB9LAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocmVzb2x2ZSkgewogICAgICByZXR1cm4gcmVxdWlyZShbJy4uL3ZpZXdzL3JlcG9ydENlbnRlci9wYXlvdXREZXRhaWxlZC52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy9jb21taXNzaW9uUmVwb3J0JywKICAgIG5hbWU6ICfkvaPph5HmiqXooagnLAogICAgbWV0YTogewogICAgICByZXF1aXJlQXV0aDogdHJ1ZQogICAgfSwKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgICAgcmV0dXJuIHJlcXVpcmUoWycuLi92aWV3cy9yZXBvcnRDZW50ZXIvY29tbWlzc2lvblJlcG9ydC52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgewogICAgcGF0aDogJy91c2VyUmVwb3J0JywKICAgIG5hbWU6ICfkvJrlkZjmiqXooagnLAogICAgbWV0YTogewogICAgICByZXF1aXJlQXV0aDogdHJ1ZSwKICAgICAgbGV2ZWw6IFsnMyddCiAgICB9LAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocmVzb2x2ZSkgewogICAgICByZXR1cm4gcmVxdWlyZShbJy4uL3ZpZXdzL3JlcG9ydENlbnRlci91c2VyUmVwb3J0LnZ1ZSddLCByZXNvbHZlKTsKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2ludml0YXRpb25SZXdhcmRSZXBvcnQnLAogICAgbmFtZTogJ+mCgOivt+acieWlluaKpeihqCcsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVBdXRoOiB0cnVlLAogICAgICBsZXZlbDogWyczJ10KICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvcmVwb3J0Q2VudGVyL2ludml0YXRpb25SZXdhcmRSZXBvcnQudnVlJ10sIHJlc29sdmUpOwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvSW52aXRBZ2VudFJld2FyZFJlcG9ydCcsCiAgICBuYW1lOiAn5Luj55CG6YKA6K+35oql6KGoJywKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZUF1dGg6IHRydWUsCiAgICAgIGxldmVsOiBbJzMnXQogICAgfSwKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgICAgcmV0dXJuIHJlcXVpcmUoWycuLi92aWV3cy9yZXBvcnRDZW50ZXIvSW52aXRBZ2VudFJld2FyZFJlcG9ydC52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgLy8g5o6o5bm/5LiT5Yy6CiAgewogICAgcGF0aDogJy9hZ2VudEltcG9ydCcsCiAgICBuYW1lOiAn5o6o5bm/572R5Z2AJywKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZUF1dGg6IHRydWUsCiAgICAgIGxldmVsOiBbJzMnXQogICAgfSwKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgICAgcmV0dXJuIHJlcXVpcmUoWycuLi92aWV3cy9wcm9tb3Rpb25ab25lL2FnZW50SW1wb3J0LnZ1ZSddLCByZXNvbHZlKTsKICAgIH0KICB9LCB7CiAgICBwYXRoOiAnL2FnZW50U2V0JywKICAgIG5hbWU6ICfmjqjlub/ntKDmnZAnLAogICAgbWV0YTogewogICAgICByZXF1aXJlQXV0aDogdHJ1ZSwKICAgICAgbGV2ZWw6IFsnMyddCiAgICB9LAogICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocmVzb2x2ZSkgewogICAgICByZXR1cm4gcmVxdWlyZShbJy4uL3ZpZXdzL3Byb21vdGlvblpvbmUvYWdlbnRTZXQudnVlJ10sIHJlc29sdmUpOwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvZ2VuZXJhQWdlbnRSZWdJbXBvcnQnLAogICAgbmFtZTogJ+S7o+eQhumCgOivt+aOqOW5vycsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVBdXRoOiB0cnVlLAogICAgICBsZXZlbDogWyczJ10KICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvcHJvbW90aW9uWm9uZS9nZW5lcmFBZ2VudFJlZ0ltcG9ydC52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfSwgLy8g5Liq5Lq65Lit5b+DCiAgewogICAgcGF0aDogJy9pbmZvcm1hdGlvbicsCiAgICBuYW1lOiAn5Liq5Lq66LWE5paZJywKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZUF1dGg6IHRydWUKICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvcGVyc29uYWxDZW50ZXIvaW5mb3JtYXRpb24udnVlJ10sIHJlc29sdmUpOwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvY29udGFjdFVzJywKICAgIG5hbWU6ICfogZTns7vmiJHku6wnLAogICAgbWV0YTogewogICAgICByZXF1aXJlQXV0aDogdHJ1ZQogICAgfSwKICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgICAgcmV0dXJuIHJlcXVpcmUoWycuLi92aWV3cy9wZXJzb25hbENlbnRlci9jb250YWN0VXMudnVlJ10sIHJlc29sdmUpOwogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvdmlwT25seScsCiAgICBuYW1lOiAnVklQ5LiT5LqrJywKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZUF1dGg6IHRydWUsCiAgICAgIGxldmVsOiBbJzEnLCAnMicsICczJ10KICAgIH0sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvcGVyc29uYWxDZW50ZXIvdmlwT25seS52dWUnXSwgcmVzb2x2ZSk7CiAgICB9CiAgfV0KfSwgewogIHBhdGg6ICcvYWN0aW5nTG90dGVyeScsCiAgbmFtZTogJ2FjdGluZ0xvdHRlcnknLAogIG1ldGE6IHsKICAgIHJlcXVpcmVBdXRoOiB0cnVlLAogICAgbGV2ZWw6IFsnMScsICcyJywgJzMnXQogIH0sCiAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocmVzb2x2ZSkgewogICAgcmV0dXJuIHJlcXVpcmUoWycuLi92aWV3cy9wZXJzb25hbENlbnRlci9hY3RpbmdMb3R0ZXJ5LnZ1ZSddLCByZXNvbHZlKTsKICB9Cn0sIHsKICBwYXRoOiAnL2xvZ2luJywKICBuYW1lOiAn55m75b2VJywKICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICByZXR1cm4gcmVxdWlyZShbJy4uL3ZpZXdzL2xvZ2luL2xvZ2luLnZ1ZSddLCByZXNvbHZlKTsKICB9Cn0sIHsKICBwYXRoOiAnL3JlZ2lzdGVyJywKICBuYW1lOiAn5rOo5YaMJywKICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChyZXNvbHZlKSB7CiAgICByZXR1cm4gcmVxdWlyZShbJy4uL3ZpZXdzL2xvZ2luL2xvZ2luLnZ1ZSddLCByZXNvbHZlKTsKICB9Cn0sIHsKICBwYXRoOiAnL2dlbmVyYXRlUGljdHVyZScsCiAgbmFtZTogJ+eUn+aIkOWbvueJhycsCiAgbWV0YTogewogICAgcmVxdWlyZUF1dGg6IHRydWUsCiAgICBsZXZlbDogWyczJ10KICB9LAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvcHJvbW90aW9uWm9uZS9nZW5lcmF0ZVBpY3R1cmUudnVlJ10sIHJlc29sdmUpOwogIH0KfSwgewogIHBhdGg6ICcvc3VwcG9ydENlbnRlcicsCiAgbmFtZTogJ+W4ruWKqeS4reW/gycsCiAgbWV0YTogewogICAgcmVxdWlyZUF1dGg6IHRydWUKICB9LAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvcGVyc29uYWxDZW50ZXIvc3VwcG9ydENlbnRlci52dWUnXSwgcmVzb2x2ZSk7CiAgfQp9LCB7CiAgcGF0aDogJy80MDQnLAogIG5hbWU6ICc0MDQnLAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHJlc29sdmUpIHsKICAgIHJldHVybiByZXF1aXJlKFsnLi4vdmlld3MvNDA0LnZ1ZSddLCByZXNvbHZlKTsKICB9Cn1dOwp2YXIgcm91dGVyID0gbmV3IFZ1ZVJvdXRlcih7CiAgLy8gbW9kZTogJ2hpc3RvcnknLAogIGJhc2U6IHByb2Nlc3MuZW52LkJBU0VfVVJMLAogIHJvdXRlczogcm91dGVzCn0pOwpyb3V0ZXIuYmVmb3JlRWFjaChmdW5jdGlvbiAodG8sIGZyb20sIG5leHQpIHsKICBpZiAodG8ucXVlcnkuYWNjZXNzX3Rva2VuICYmIHRvLnF1ZXJ5LmFjY2Vzc190b2tlbiAhPSAnJykgewogICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2FjY2Vzc190b2tlbicsIHRvLnF1ZXJ5LmFjY2Vzc190b2tlbik7CiAgfQoKICB2YXIgbGV2ZWxfaWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbGV2ZWxfaWQnKTsKCiAgaWYgKHRvLm1ldGEucmVxdWlyZUF1dGggPT0gdHJ1ZSkgewogICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJhY2Nlc3NfdG9rZW4iKSB8fCB0by5xdWVyeS5hY2Nlc3NfdG9rZW4pIHsKICAgICAgaWYgKHRvLm1ldGEubGV2ZWwpIHsKICAgICAgICAvLyBQQ+errwogICAgICAgIGlmICghdG8ucXVlcnkuYWNjZXNzX3Rva2VuKSB7CiAgICAgICAgICBpZiAodG8ubWV0YS5sZXZlbC5pbmRleE9mKGxldmVsX2lkKSAhPSAtMSkgewogICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpZiAodG8ucGF0aC5pbmRleE9mKCd3aXRoZHJhdycpICE9IC0xIHx8IHRvLnBhdGguaW5kZXhPZignY29tbWlzc2lvblJlcG9ydCcpKSB7CiAgICAgICAgICAgICAgdmFyIGJpbGxfd3RkID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYmlsbF93dGQnKSk7CgogICAgICAgICAgICAgIGlmIChiaWxsX3d0ZCkgewogICAgICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBuZXh0KCcvNDA0Jyk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIG5leHQoJy80MDQnKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSAvLyBhcHDlnKh1cmzkvKBhY2Nlc3NfdG9rZW4KCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIG5leHQoKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbmV4dCgpOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICBuZXh0KCcvbG9naW4nKTsKICAgIH0KICB9IGVsc2UgewogICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJhY2Nlc3NfdG9rZW4iKSAmJiB0by5wYXRoID09ICcvbG9naW4nKSB7CiAgICAgIG5leHQoJy9ob21lJyk7CiAgICB9IGVsc2UgewogICAgICBuZXh0KCk7CiAgICB9CiAgfQp9KTsgLy/ot6/nlLHot7PovazlkI7vvIzpobXpnaLlm57liLDpobbpg6gKCnJvdXRlci5hZnRlckVhY2goZnVuY3Rpb24gKCkgewogIGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wID0gMDsKICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wID0gMDsKfSk7CnZhciBvcmlnaW5hbFB1c2ggPSBWdWVSb3V0ZXIucHJvdG90eXBlLnB1c2g7CgpWdWVSb3V0ZXIucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiBwdXNoKGxvY2F0aW9uKSB7CiAgcmV0dXJuIG9yaWdpbmFsUHVzaC5jYWxsKHRoaXMsIGxvY2F0aW9uKS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICByZXR1cm4gZXJyOwogIH0pOwp9OwoKZXhwb3J0IGRlZmF1bHQgcm91dGVyOw=="},null]}