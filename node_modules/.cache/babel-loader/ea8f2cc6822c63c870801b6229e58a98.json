{"remainingRequest":"L:\\bm_admin\\node_modules\\thread-loader\\dist\\cjs.js!L:\\bm_admin\\node_modules\\babel-loader\\lib\\index.js!L:\\bm_admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!L:\\bm_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!L:\\bm_admin\\src\\views\\management\\agentSubordinate.vue?vue&type=script&lang=js&","dependencies":[{"path":"L:\\bm_admin\\src\\views\\management\\agentSubordinate.vue","mtime":1611035180000},{"path":"L:\\bm_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"L:\\bm_admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"L:\\bm_admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"L:\\bm_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"L:\\bm_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}