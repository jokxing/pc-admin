{"remainingRequest":"D:\\vue3\\bf_admin\\node_modules\\babel-loader\\lib\\index.js!D:\\vue3\\bf_admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue3\\bf_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue3\\bf_admin\\src\\views\\promotionZone\\generatePicture.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue3\\bf_admin\\src\\views\\promotionZone\\generatePicture.vue","mtime":1599728199866},{"path":"D:\\vue3\\bf_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue3\\bf_admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vue3\\bf_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue3\\bf_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGhlYWRlcnMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9oZWFkZXIudnVlJzsKaW1wb3J0IGZvb3RlcnMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9mb290ZXIudnVlJzsKaW1wb3J0IFFSQ29kZSBmcm9tICdxcmNvZGVqczInOwppbXBvcnQgVnVlRHJhZ1Jlc2l6ZSBmcm9tICJ2dWUtZHJhZy1yZXNpemUiOwppbXBvcnQgeyBVcEltZ0FwaSB9IGZyb20gJy4uLy4uL2h0dHAvYXBpLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbWdVcmw6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdzZWxlY3RlZEJnSW1nJyksCiAgICAgIHRhYnM6IFsn5LqM57u056CBJywgJ+iBlOezu+aWueW8jycsICfmloflrZfkv6Hmga8nXSwKICAgICAgdGFiTnVtOiAwLAogICAgICAvLyDkuoznu7TnoIEKICAgICAgcXJDb2RlQ29sb3I6ICIjMDAwIiwKICAgICAgcXJDb2RlQmdDb2xvcjogIiNmZmYiLAogICAgICBxckNvZGVMaW5rOiAiaHR0cHM6Ly93d3cuYmFpZHUuY29tIiwKICAgICAgc2hvd1FyQ29kZTogZmFsc2UsCiAgICAgIGNhbnZhc1dpZHRoOiA5MiwKICAgICAgY2FudmFzSGVpZ2h0OiA5MiwKICAgICAgLy8g5LiK5Lyg5oyJ6ZKuCiAgICAgIHNob3dVcGxvYWRCdG46IHRydWUsCiAgICAgIC8vIOS4iuS8oOWIneWni+WMlgogICAgICBxbjogewogICAgICAgIHRva2VuOiAiIgogICAgICB9LAogICAgICB1cFVybDogIiIsCiAgICAgIC8vIOS4iuS8oOaIkOWKn+WQjklNRwogICAgICBzaG93Q29udGFjdEltZzogZmFsc2UsCiAgICAgIGNvbnRhY3RJbWc6ICIiLAogICAgICAvLyDmloflrZcxCiAgICAgIHdvcmQxOiAiIiwKICAgICAgd29yZENvbG9yMTogInJlZCIsCiAgICAgIGJnQ29sb3IxOiAiI2ZmZiIsCiAgICAgIHNob3dXb3JkMTogZmFsc2UsCiAgICAgIC8vIOaWh+WtlzIKICAgICAgd29yZDI6ICIiLAogICAgICB3b3JkQ29sb3IyOiAicmVkIiwKICAgICAgYmdDb2xvcjI6ICIjZmZmIiwKICAgICAgc2hvd1dvcmQyOiBmYWxzZSwKICAgICAgLy8g5paH5a2XMwogICAgICB3b3JkMzogIiIsCiAgICAgIHdvcmRDb2xvcjM6ICJyZWQiLAogICAgICBiZ0NvbG9yMzogIiNmZmYiLAogICAgICBzaG93V29yZDM6IGZhbHNlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy8g5LiK5Lyg5Yid5aeL5YyW6I635Y+W5LiK5Lyg5o6l5Y+j5Zyw5Z2A5ZKMdG9rZW4KICAgIFVwSW1nRGF0YTogZnVuY3Rpb24gVXBJbWdEYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgVXBJbWdBcGkoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy51cFVybCA9IHJlcy5kYXRhLm1lc3NhZ2UudXBVcmw7CiAgICAgICAgX3RoaXMucW4udG9rZW4gPSByZXMuZGF0YS5tZXNzYWdlLlRva2VuOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7fSk7CiAgICB9LAogICAgLy8g5Yid5aeL5YyWCiAgICBiaW5kUVJDb2RlOiBmdW5jdGlvbiBiaW5kUVJDb2RlKCkgewogICAgICBuZXcgUVJDb2RlKHRoaXMuJHJlZnMucXJDb2RlRGl2LCB7CiAgICAgICAgdGV4dDogdGhpcy5xckNvZGVMaW5rLAogICAgICAgIHdpZHRoOiA5MiwKICAgICAgICBoZWlnaHQ6IDkyLAogICAgICAgIGNvbG9yRGFyazogdGhpcy5xckNvZGVDb2xvciwKICAgICAgICAvL+S6jOe7tOeggeminOiJsgogICAgICAgIGNvbG9yTGlnaHQ6ICIjZmYwMDAwMDAiLAogICAgICAgIC8v5LqM57u056CB6IOM5pmv6ImyCiAgICAgICAgY29ycmVjdExldmVsOiBRUkNvZGUuQ29ycmVjdExldmVsLkwgLy/lrrnplJnnjofvvIxML00vSAoKICAgICAgfSk7CiAgICB9LAogICAgLy8g57yp5pS+5pe25LqL5Lu2CiAgICByZXNpemU6IGZ1bmN0aW9uIHJlc2l6ZShuZXdSZWN0KSB7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3FyY29kZScpWzBdLnN0eWxlLndpZHRoID0gbmV3UmVjdC53aWR0aCAtIDQwICsgInB4IjsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncXJjb2RlJylbMF0uc3R5bGUuaGVpZ2h0ID0gbmV3UmVjdC5oZWlnaHQgLSA0MCArICJweCI7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdjYW52YXMnKVswXS5zdHlsZS53aWR0aCA9IG5ld1JlY3Qud2lkdGggLSA1MCArICJweCI7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdjYW52YXMnKVswXS5zdHlsZS5oZWlnaHQgPSBuZXdSZWN0LmhlaWdodCAtIDUwICsgInB4IjsKICAgICAgdGhpcy5jYW52YXNXaWR0aCA9IG5ld1JlY3Qud2lkdGggLSA1MDsKICAgICAgdGhpcy5jYW52YXNIZWlnaHQgPSBuZXdSZWN0LmhlaWdodCAtIDUwOwogICAgfSwKICAgIC8vIOS6jOe7tOeggemTvuaOpei+k+WFpeS6i+S7tgogICAgcXJDb2RlTGlua0lucHV0OiBmdW5jdGlvbiBxckNvZGVMaW5rSW5wdXQoKSB7CiAgICAgIHRoaXMuJHJlZnMucXJDb2RlRGl2LmlubmVySFRNTCA9ICcnOwogICAgICBuZXcgUVJDb2RlKHRoaXMuJHJlZnMucXJDb2RlRGl2LCB7CiAgICAgICAgdGV4dDogdGhpcy5xckNvZGVMaW5rLAogICAgICAgIHdpZHRoOiB0aGlzLmNhbnZhc1dpZHRoLAogICAgICAgIGhlaWdodDogdGhpcy5jYW52YXNIZWlnaHQsCiAgICAgICAgY29sb3JEYXJrOiB0aGlzLnFyQ29kZUNvbG9yLAogICAgICAgIC8v5LqM57u056CB6aKc6ImyCiAgICAgICAgY29sb3JMaWdodDogIiNmZjAwMDAwMCIsCiAgICAgICAgLy/kuoznu7TnoIHog4zmma/oibIKICAgICAgICBjb3JyZWN0TGV2ZWw6IFFSQ29kZS5Db3JyZWN0TGV2ZWwuTCAvL+WuuemUmeeOh++8jEwvTS9ICgogICAgICB9KTsKICAgIH0sCiAgICAvLyDkuoznu7TnoIHpopzoibLpnaLmnb/kuK3lvZPliY3mmL7npLrnmoTpopzoibLlj5HnlJ/mlLnlj5jml7bop6blj5EKICAgIHFyQ29kZUNvbG9yQWN0aXZlOiBmdW5jdGlvbiBxckNvZGVDb2xvckFjdGl2ZSh2YWwpIHsKICAgICAgdGhpcy4kcmVmcy5xckNvZGVEaXYuaW5uZXJIVE1MID0gJyc7CiAgICAgIG5ldyBRUkNvZGUodGhpcy4kcmVmcy5xckNvZGVEaXYsIHsKICAgICAgICB0ZXh0OiB0aGlzLnFyQ29kZUxpbmssCiAgICAgICAgd2lkdGg6IHRoaXMuY2FudmFzV2lkdGgsCiAgICAgICAgaGVpZ2h0OiB0aGlzLmNhbnZhc0hlaWdodCwKICAgICAgICBjb2xvckRhcms6IHZhbCwKICAgICAgICAvL+S6jOe7tOeggeminOiJsgogICAgICAgIGNvbG9yTGlnaHQ6ICIjZmYwMDAwMDAiLAogICAgICAgIC8v5LqM57u056CB6IOM5pmv6ImyCiAgICAgICAgY29ycmVjdExldmVsOiBRUkNvZGUuQ29ycmVjdExldmVsLkwgLy/lrrnplJnnjofvvIxML00vSAoKICAgICAgfSk7CiAgICB9LAogICAgLy8g5LqM57u056CB6IOM5pmv6Z2i5p2/5Lit5b2T5YmN5pi+56S655qE6aKc6Imy5Y+R55Sf5pS55Y+Y5pe26Kem5Y+RCiAgICBxckNvZGVCZ0NvbG9yQWN0aXZlOiBmdW5jdGlvbiBxckNvZGVCZ0NvbG9yQWN0aXZlKHZhbCkgewogICAgICB0aGlzLnFyQ29kZUJnQ29sb3IgPSB2YWw7CiAgICB9LAogICAgLy8g5LiK5Lyg6Kem5Y+RY2hhbmdlCiAgICBoYW5kbGVDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUNoYW5nZShmaWxlLCBmaWxlTGlzdCkgewogICAgICB0aGlzLnNob3dVcGxvYWRCdG4gPSBmYWxzZTsKICAgIH0sCiAgICAvLyDkuIrkvKDmiJDlip8KICAgIGhhbmRsZVN1Y2Nlc3M6IGZ1bmN0aW9uIGhhbmRsZVN1Y2Nlc3MocmVzLCBmaWxlKSB7CiAgICAgIHRoaXMuc2hvd0NvbnRhY3RJbWcgPSB0cnVlOwogICAgICB0aGlzLmNvbnRhY3RJbWcgPSByZXMuZmlsZV9wYXRoOwogICAgfSwKICAgIC8vIOS4iuS8oOaKpemUmQogICAgaGFuZGxlRXJyb3I6IGZ1bmN0aW9uIGhhbmRsZUVycm9yKCkgewogICAgICBjb25zb2xlLmxvZygiZXJyb3IiKTsKICAgICAgdGhpcy5zaG93VXBsb2FkQnRuID0gdHJ1ZTsKICAgIH0sCiAgICAvLyDliKDpmaTlm77niYcKICAgIGhhbmRsZVJlbW92ZTogZnVuY3Rpb24gaGFuZGxlUmVtb3ZlKCkgewogICAgICB0aGlzLnNob3dVcGxvYWRCdG4gPSB0cnVlOwogICAgICB0aGlzLmNvbnRhY3RJbWcgPSAiIjsKICAgIH0sCiAgICAvLyDkuIrkvKDlm77niYfpmZDliLbmoLzlvI/lkozlpKflsI8KICAgIGJlZm9yZUF2YXRhclVwbG9hZDogZnVuY3Rpb24gYmVmb3JlQXZhdGFyVXBsb2FkKGZpbGUpIHsKICAgICAgdmFyIGlzSlBHID0gZmlsZS50eXBlID09PSAnaW1hZ2UvanBlZyc7CiAgICAgIHZhciBpc1BORyA9IGZpbGUudHlwZSA9PT0gJ2ltYWdlL3BuZyc7CiAgICAgIHZhciBpc0x0MTVNID0gZmlsZS5zaXplIC8gMTAyNCAvIDEwMjQgPCAyMDA7CgogICAgICBpZiAoIWlzSlBHICYmICFpc1BORykgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+S4iuS8oOWktOWDj+WbvueJh+WPquiDveaYryBKUEcg5ZKMIFBORyDmoLzlvI8hJyk7CiAgICAgIH0KCiAgICAgIGlmICghaXNMdDE1TSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+S4iuS8oOWbvueJh+Wkp+Wwj+S4jeiDvei2hei/hyAyMDBLQiEnKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGlzSlBHIHx8IGlzUE5HICYmIGlzTHQxNU07CiAgICB9LAogICAgLy8g5paH5a2X6aKc6Imy6Z2i5p2/5Lit5b2T5YmN5pi+56S655qE6aKc6Imy5Y+R55Sf5pS55Y+Y5pe26Kem5Y+RCiAgICB3b3JkQ29sb3JBY3RpdmUxOiBmdW5jdGlvbiB3b3JkQ29sb3JBY3RpdmUxKHZhbCkgewogICAgICB0aGlzLndvcmRDb2xvcjEgPSB2YWw7CiAgICB9LAogICAgYmdDb2xvckFjdGl2ZTE6IGZ1bmN0aW9uIGJnQ29sb3JBY3RpdmUxKHZhbCkgewogICAgICB0aGlzLmJnQ29sb3IxID0gdmFsOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuVXBJbWdEYXRhKCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICB0aGlzLmJpbmRRUkNvZGUoKTsKICAgIH0pOwogIH0sCiAgY29tcG9uZW50czogewogICAgaGVhZGVyczogaGVhZGVycywKICAgIGZvb3RlcnM6IGZvb3RlcnMsCiAgICBWdWVEcmFnUmVzaXplOiBWdWVEcmFnUmVzaXplCiAgfQp9Ow=="},{"version":3,"sources":["generatePicture.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"generate_picture\">\r\n        <headers></headers>\r\n\r\n        <el-row class=\"inner\">\r\n            <el-main>\r\n                <el-page-header @back=\"$router.go(-1)\" content=\"生成图片\"></el-page-header>\r\n                \r\n                <el-row>\r\n                    <div class=\"generate_imgBox\">\r\n                        <div class=\"generate_imgInner\">\r\n                            <div id=\"dragContainer\">\r\n                                <img :src=\"imgUrl\">\r\n\r\n                                <VueDragResize :aspectRatio=\"true\" :parentLimitation=\"true\" :w=\"142\" :h=\"142\" :minw=\"100\" :minh=\"100\" v-on:resizing=\"resize\" v-show=\"showQrCode\">\r\n                                    <div id=\"qrCode\" class=\"qrcode\" ref=\"qrCodeDiv\" style=\"width: 102px;height: 102px;\" :style=\"{ background: qrCodeBgColor }\"></div>\r\n                                </VueDragResize>\r\n\r\n                                <VueDragResize :aspectRatio=\"true\" :parentLimitation=\"true\" :w=\"142\" :h=\"142\" :minw=\"100\" :minh=\"100\" v-show=\"showContactImg\">\r\n                                    <img class=\"contact_img\" :src=\"contactImg\">\r\n                                </VueDragResize>\r\n\r\n                                <VueDragResize :isResizable=\"false\" v-show=\"showWord1\" style=\"width: auto;height: auto\">\r\n                                    <pre :style=\"{ color: wordColor1, background: bgColor1 }\">{{ word1 }}</pre>\r\n                                </VueDragResize>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"generate_from\">\r\n                        <div class=\"generate_from_box\">\r\n                            <el-row class=\"generate_from_tab\">\r\n                                <ul>\r\n                                    <li v-for=\"(item,index) in tabs\" :class=\"{ bor_active: tabNum == index}\" @click=\"tabNum = index\">{{ item }}</li>\r\n                                </ul>\r\n                            </el-row>\r\n\r\n                            <el-row class=\"generate_from_bot\" v-show=\"tabNum == 0\">\r\n                                <p>二维码颜色</p>\r\n                                <el-color-picker v-model=\"qrCodeColor\" @active-change=\"qrCodeColorActive\"></el-color-picker>\r\n                                <p>二维码背景</p>\r\n                                <el-color-picker v-model=\"qrCodeBgColor\" @active-change=\"qrCodeBgColorActive\"></el-color-picker>\r\n                                <p>二维码颜色</p>\r\n                                <el-input\r\n                                    type=\"textarea\"\r\n                                    :rows=\"2\"\r\n                                    placeholder=\"请输入内容\"\r\n                                    v-model=\"qrCodeLink\"\r\n                                    @input=\"qrCodeLinkInput\">\r\n                                </el-input>\r\n                                <el-checkbox v-model=\"showQrCode\">二维码预览</el-checkbox>\r\n                            </el-row>\r\n\r\n                            <el-row class=\"generate_from_bot\" v-show=\"tabNum == 1\">\r\n                                <p>联系方式</p>\r\n                                <el-upload\r\n                                    class=\"upload-demo\"\r\n                                    :action=\"upUrl\"\r\n                                    :data=\"qn\"\r\n                                    :on-change=\"handleChange\"\r\n                                    :on-success=\"handleSuccess\"\r\n                                    :onError=\"handleError\"\r\n                                    :on-remove=\"handleRemove\"\r\n                                    :before-upload=\"beforeAvatarUpload\">\r\n                                    <el-button size=\"small\" class=\"btn_bor_primary\" round plain v-show=\"showUploadBtn\">上传图片</el-button>\r\n                                </el-upload>\r\n                            </el-row>\r\n\r\n                            <el-row class=\"generate_from_bot generate_from_three\" v-show=\"tabNum == 2\">\r\n                                <p>文字1</p>\r\n                                <textarea \r\n                                    placeholder=\"请输入内容\" \r\n                                    cols=\"30\" \r\n                                    rows=\"10\"\r\n                                    v-model=\"word1\"\r\n                                    :style=\"{ color: wordColor1, background: bgColor1 }\"></textarea>\r\n                                <p>颜色</p>\r\n                                <el-color-picker v-model=\"wordColor1\" @active-change=\"wordColorActive1\"></el-color-picker>\r\n                                <p>背景</p>\r\n                                <el-color-picker v-model=\"bgColor1\" @active-change=\"bgColorActive1\"></el-color-picker>\r\n                                <el-checkbox v-model=\"showWord1\" class=\"fix\" style=\"margin-bottom: 24px;\">文字预览</el-checkbox>\r\n\r\n                                <el-row class=\"divider-dashed\"></el-row>\r\n\r\n                                <p>文字2</p>\r\n                                <el-input\r\n                                    type=\"textarea\"\r\n                                    :rows=\"2\"\r\n                                    placeholder=\"请输入内容\"\r\n                                    v-model=\"word2\">\r\n                                </el-input>\r\n                                <p>颜色</p>\r\n                                <el-color-picker v-model=\"wordColor2\"></el-color-picker>\r\n                                <p>背景</p>\r\n                                <el-color-picker v-model=\"bgColor2\"></el-color-picker>\r\n                                <el-checkbox v-model=\"showWord2\" class=\"fix\" style=\"margin-bottom: 24px;\">文字预览</el-checkbox>\r\n\r\n                                <el-row class=\"divider-dashed\"></el-row>\r\n\r\n                                <p>文字3</p>\r\n                                <el-input\r\n                                    type=\"textarea\"\r\n                                    :rows=\"2\"\r\n                                    placeholder=\"请输入内容\"\r\n                                    v-model=\"word3\">\r\n                                </el-input>\r\n                                <p>颜色</p>\r\n                                <el-color-picker v-model=\"wordColor3\"></el-color-picker>\r\n                                <p>背景</p>\r\n                                <el-color-picker v-model=\"bgColor3\"></el-color-picker>\r\n                                <el-checkbox v-model=\"showWord3\" class=\"fix\" style=\"margin-bottom: 24px;\">文字预览</el-checkbox>\r\n                            </el-row>\r\n                        </div>\r\n\r\n                        <div class=\"generate_from_btn\">\r\n                            <el-button class=\"btn_bor_primary\" round plain>保存本地</el-button>\r\n                            <el-button class=\"btn_bor_primary\" round plain>手机查看</el-button>\r\n                            <el-button class=\"btn_bor_primary\" round plain>预览</el-button>\r\n                        </div>\r\n                    </div>\r\n                </el-row>\r\n            </el-main>\r\n        </el-row>\r\n\r\n        <footers></footers>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import headers from '../../components/header.vue'\r\n    import footers from '../../components/footer.vue'\r\n\r\n    import QRCode from 'qrcodejs2';\r\n    import VueDragResize from \"vue-drag-resize\";\r\n\r\n    import { UpImgApi } from '../../http/api.js'\r\n    export default {\r\n        data() {\r\n            return {\r\n                imgUrl: localStorage.getItem('selectedBgImg'),\r\n                tabs: ['二维码', '联系方式', '文字信息'],\r\n                tabNum: 0,\r\n                // 二维码\r\n                qrCodeColor: \"#000\",\r\n                qrCodeBgColor: \"#fff\",\r\n                qrCodeLink: \"https://www.baidu.com\",\r\n                showQrCode: false,\r\n                canvasWidth: 92,\r\n                canvasHeight: 92,\r\n                // 上传按钮\r\n                showUploadBtn: true,\r\n                // 上传初始化\r\n                qn:{\r\n                    token: \"\"\r\n                },\r\n                upUrl: \"\",\r\n                // 上传成功后IMG\r\n                showContactImg: false,\r\n                contactImg: \"\",\r\n                // 文字1\r\n                word1:\"\",\r\n                wordColor1: \"red\",\r\n                bgColor1: \"#fff\",\r\n                showWord1: false,\r\n                // 文字2\r\n                word2:\"\",\r\n                wordColor2: \"red\",\r\n                bgColor2: \"#fff\",\r\n                showWord2: false,\r\n                // 文字3\r\n                word3:\"\",\r\n                wordColor3: \"red\",\r\n                bgColor3: \"#fff\",\r\n                showWord3: false,\r\n            }\r\n        },\r\n        methods: {\r\n            // 上传初始化获取上传接口地址和token\r\n            UpImgData () {\r\n                var _this = this;\r\n                UpImgApi().then(res => {\r\n                    _this.upUrl = res.data.message.upUrl;\r\n                    _this.qn.token = res.data.message.Token\r\n                }).catch(err => {\r\n\r\n                })\r\n            },\r\n            // 初始化\r\n            bindQRCode: function () {\r\n                new QRCode(this.$refs.qrCodeDiv, {\r\n                    text: this.qrCodeLink,\r\n                    width: 92,\r\n                    height: 92,\r\n                    colorDark: this.qrCodeColor, //二维码颜色\r\n                    colorLight: \"#ff000000\", //二维码背景色\r\n                    correctLevel: QRCode.CorrectLevel.L//容错率，L/M/H\r\n                })\r\n            },\r\n            // 缩放时事件\r\n            resize(newRect) {\r\n                document.getElementsByClassName('qrcode')[0].style.width = (newRect.width - 40) + \"px\";\r\n                document.getElementsByClassName('qrcode')[0].style.height = (newRect.height - 40) + \"px\";\r\n                document.getElementsByTagName('canvas')[0].style.width = (newRect.width - 50) + \"px\";\r\n                document.getElementsByTagName('canvas')[0].style.height = (newRect.height - 50) + \"px\";\r\n                this.canvasWidth = (newRect.width - 50);\r\n                this.canvasHeight = (newRect.height - 50);\r\n            },\r\n            // 二维码链接输入事件\r\n            qrCodeLinkInput () {\r\n                this.$refs.qrCodeDiv.innerHTML = '';\r\n                new QRCode(this.$refs.qrCodeDiv, {\r\n                    text: this.qrCodeLink,\r\n                    width: this.canvasWidth,\r\n                    height: this.canvasHeight,\r\n                    colorDark: this.qrCodeColor, //二维码颜色\r\n                    colorLight: \"#ff000000\", //二维码背景色\r\n                    correctLevel: QRCode.CorrectLevel.L//容错率，L/M/H\r\n                })\r\n            },\r\n            // 二维码颜色面板中当前显示的颜色发生改变时触发\r\n            qrCodeColorActive (val) {\r\n                this.$refs.qrCodeDiv.innerHTML = '';\r\n                new QRCode(this.$refs.qrCodeDiv, {\r\n                    text: this.qrCodeLink,\r\n                    width: this.canvasWidth,\r\n                    height: this.canvasHeight,\r\n                    colorDark: val, //二维码颜色\r\n                    colorLight: \"#ff000000\", //二维码背景色\r\n                    correctLevel: QRCode.CorrectLevel.L//容错率，L/M/H\r\n                })\r\n            },\r\n            // 二维码背景面板中当前显示的颜色发生改变时触发\r\n            qrCodeBgColorActive (val) {\r\n                this.qrCodeBgColor = val\r\n            },\r\n            // 上传触发change\r\n            handleChange(file, fileList) {\r\n                this.showUploadBtn = false\r\n            },\r\n            // 上传成功\r\n            handleSuccess(res, file) {\r\n                this.showContactImg = true;\r\n                this.contactImg = res.file_path\r\n            },\r\n            // 上传报错\r\n            handleError() {\r\n                console.log(\"error\")\r\n                this.showUploadBtn = true\r\n            },\r\n            // 删除图片\r\n            handleRemove() {\r\n                this.showUploadBtn = true;\r\n                this.contactImg = \"\"\r\n            },\r\n            // 上传图片限制格式和大小\r\n            beforeAvatarUpload(file) {\r\n                const isJPG = file.type === 'image/jpeg';\r\n                const isPNG = file.type === 'image/png'\r\n                const isLt15M = file.size / 1024 / 1024 < 200;\r\n\r\n                if (!isJPG && !isPNG) {\r\n                    this.$message.error('上传头像图片只能是 JPG 和 PNG 格式!');\r\n                }\r\n                if (!isLt15M) {\r\n                    this.$message.error('上传图片大小不能超过 200KB!');\r\n                }\r\n                return isJPG || isPNG && isLt15M;\r\n            },\r\n            // 文字颜色面板中当前显示的颜色发生改变时触发\r\n            wordColorActive1 (val) {\r\n                this.wordColor1 = val\r\n            },\r\n            bgColorActive1 (val) {\r\n                this.bgColor1 = val\r\n            }\r\n        },  \r\n        created() {\r\n            this.UpImgData();\r\n        },\r\n        mounted () {\r\n            this.$nextTick(function () {\r\n                this.bindQRCode();\r\n            })\r\n        },\r\n        components:{\r\n            headers,\r\n            footers,\r\n            VueDragResize\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    @import '../../assets/css/promotionZone.css';\r\n</style>"],"sourceRoot":"src/views/promotionZone"}]}