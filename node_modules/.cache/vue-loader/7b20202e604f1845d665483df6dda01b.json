{"remainingRequest":"D:\\vue3\\bf_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue3\\bf_admin\\src\\views\\home\\home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue3\\bf_admin\\src\\views\\home\\home.vue","mtime":1611747309208},{"path":"D:\\vue3\\bf_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue3\\bf_admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue3\\bf_admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vue3\\bf_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue3\\bf_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}