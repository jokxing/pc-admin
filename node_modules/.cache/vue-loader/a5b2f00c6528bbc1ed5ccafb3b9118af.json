{"remainingRequest":"D:\\vue\\pc_admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\vue\\pc_admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\pc_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\pc_admin\\src\\components\\aside.vue?vue&type=template&id=9b999550&scoped=true&","dependencies":[{"path":"D:\\vue\\pc_admin\\src\\components\\aside.vue","mtime":1639658700000},{"path":"D:\\vue\\pc_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue\\pc_admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\vue\\pc_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue\\pc_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}