{"remainingRequest":"D:\\vue\\pc_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\pc_admin\\src\\views\\promotionZone\\generatePicture.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\pc_admin\\src\\views\\promotionZone\\generatePicture.vue","mtime":1608557392000},{"path":"D:\\vue\\pc_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue\\pc_admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vue\\pc_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue\\pc_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["generatePicture.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"generatePicture.vue","sourceRoot":"src/views/promotionZone","sourcesContent":["<template>\r\n    <div class=\"generate_picture\">\r\n        <headers></headers>\r\n\r\n        <el-row class=\"inner\">\r\n            <el-main>\r\n                <el-page-header @back=\"$router.go(-1)\" content=\"生成图片\"></el-page-header>\r\n                \r\n                <el-row>\r\n                    <div class=\"generate_imgBox\">\r\n                        <div class=\"generate_imgInner\">\r\n                            <div id=\"dragContainer\">\r\n                                <img :src=\"imgUrl\">\r\n\r\n                                <VueDragResize :aspectRatio=\"true\" :parentLimitation=\"true\" :w=\"142\" :h=\"142\" :minw=\"100\" :minh=\"100\" :x=\"458\" :y=\"100\" v-on:resizing=\"resize\" v-show=\"showQrCode\">\r\n                                    <div id=\"qrCode\" class=\"qrcode\" ref=\"qrCodeDiv\" style=\"width: 102px;height: 102px;\" :style=\"{ background: qrCodeBgColor }\"></div>\r\n                                </VueDragResize>\r\n\r\n                                <VueDragResize :aspectRatio=\"true\" :parentLimitation=\"true\" :w=\"142\" :h=\"142\" :minw=\"100\" :minh=\"100\" :x=\"150\" :y=\"100\" v-show=\"showContactImg\">\r\n                                    <img class=\"contact_img\" :src=\"contactImg\">\r\n                                </VueDragResize>\r\n\r\n                                <VueDragResize :aspectRatio=\"false\" :isResizable=\"true\" :parentLimitation=\"false\" :w=\"100\" :h=\"50\" :minh=\"50\" :x=\"50\" :y=\"50\" v-on:resizing=\"resizePone\" v-show=\"showWord1\">\r\n                                    <pre :style=\"{ color: wordColor1, background: bgColor1, fontSize: fontsize1 + 'px' }\">{{ word1 }}</pre>\r\n                                </VueDragResize>\r\n                                \r\n                                <VueDragResize :aspectRatio=\"false\" :isResizable=\"true\" :parentLimitation=\"false\" :w=\"100\" :h=\"50\" :minh=\"50\" :x=\"50\" :y=\"100\" v-on:resizing=\"resizePtwo\" v-show=\"showWord2\">\r\n                                    <pre :style=\"{ color: wordColor2, background: bgColor2, fontSize: fontsize2 + 'px' }\">{{ word2 }}</pre>\r\n                                </VueDragResize>\r\n                                \r\n                                <VueDragResize :aspectRatio=\"false\" :isResizable=\"true\" :parentLimitation=\"false\" :w=\"100\" :h=\"50\" :minh=\"50\" :x=\"50\" :y=\"100\" v-on:resizing=\"resizePthree\" v-show=\"showWord3\">\r\n                                    <pre :style=\"{ color: wordColor3, background: bgColor3, fontSize: fontsize3 + 'px' }\">{{ word3 }}</pre>\r\n                                </VueDragResize>\r\n                            </div>\r\n                        </div>\r\n                        <p>使用鼠标拖拽可改变二维码大小或位置</p>\r\n                    </div>\r\n\r\n                    <div class=\"generate_from\">\r\n                        <div class=\"generate_from_box\">\r\n                            <el-row class=\"generate_from_tab\">\r\n                                <ul>\r\n                                    <li v-for=\"(item,index) in tabs\" :class=\"{ bor_active: tabNum == index}\" @click=\"tabNum = index\">{{ item }}</li>\r\n                                </ul>\r\n                            </el-row>\r\n\r\n                            <el-row class=\"generate_from_bot\" v-show=\"tabNum == 0\">\r\n                                <p>二维码颜色</p>\r\n                                <el-color-picker v-model=\"qrCodeColor\" @active-change=\"qrCodeColorActive\"></el-color-picker>\r\n                                <p>二维码背景</p>\r\n                                <el-color-picker v-model=\"qrCodeBgColor\" @active-change=\"qrCodeBgColorActive\"></el-color-picker>\r\n                                <p>二维码颜色</p>\r\n                                <el-input\r\n                                    type=\"textarea\"\r\n                                    :rows=\"2\"\r\n                                    placeholder=\"请输入内容\"\r\n                                    v-model=\"qrCodeLink\"\r\n                                    @input=\"qrCodeLinkInput\">\r\n                                </el-input>\r\n                                <el-checkbox v-model=\"showQrCode\">二维码预览</el-checkbox>\r\n                            </el-row>\r\n\r\n                            <el-row class=\"generate_from_bot\" v-show=\"tabNum == 1\">\r\n                                <p>联系方式</p>\r\n                                <el-upload\r\n                                    class=\"upload-demo\"\r\n                                    :action=\"upUrl\"\r\n                                    :data=\"qn\"\r\n                                    :on-change=\"handleChange\"\r\n                                    :on-success=\"handleSuccess\"\r\n                                    :onError=\"handleError\"\r\n                                    :on-remove=\"handleRemove\"\r\n                                    :before-upload=\"beforeAvatarUpload\">\r\n                                    <el-button size=\"small\" class=\"btn_bor_primary\" round plain v-show=\"showUploadBtn\">上传图片</el-button>\r\n                                </el-upload>\r\n                            </el-row>\r\n\r\n                            <el-row class=\"generate_from_bot generate_from_three\" v-show=\"tabNum == 2\">\r\n                                <p>文字1</p>\r\n                                <textarea \r\n                                    placeholder=\"请输入内容\" \r\n                                    cols=\"30\" \r\n                                    rows=\"10\"\r\n                                    v-model=\"word1\"\r\n                                    :style=\"{ color: wordColor1, background: bgColor1 }\"></textarea>\r\n                                <p>颜色</p>\r\n                                <el-color-picker v-model=\"wordColor1\" @active-change=\"wordColorActive1\"></el-color-picker>\r\n                                <p>背景</p>\r\n                                <el-color-picker v-model=\"bgColor1\" @active-change=\"bgColorActive1\"></el-color-picker>\r\n                                <el-checkbox v-model=\"showWord1\" class=\"fix\" style=\"margin-bottom: 24px;\">文字预览</el-checkbox>\r\n\r\n                                <el-row class=\"divider-dashed\"></el-row>\r\n\r\n                                <p>文字2</p>\r\n                                <textarea \r\n                                    placeholder=\"请输入内容\" \r\n                                    cols=\"30\" \r\n                                    rows=\"10\"\r\n                                    v-model=\"word2\"\r\n                                    :style=\"{ color: wordColor2, background: bgColor2 }\"></textarea>\r\n                                <p>颜色</p>\r\n                                <el-color-picker v-model=\"wordColor2\" @active-change=\"wordColorActive2\"></el-color-picker>\r\n                                <p>背景</p>\r\n                                <el-color-picker v-model=\"bgColor2\" @active-change=\"bgColorActive2\"></el-color-picker>\r\n                                <el-checkbox v-model=\"showWord2\" class=\"fix\" style=\"margin-bottom: 24px;\">文字预览</el-checkbox>\r\n\r\n                                <el-row class=\"divider-dashed\"></el-row>\r\n\r\n                                <p>文字3</p>\r\n                                <textarea \r\n                                    placeholder=\"请输入内容\" \r\n                                    cols=\"30\" \r\n                                    rows=\"10\"\r\n                                    v-model=\"word3\"\r\n                                    :style=\"{ color: wordColor3, background: bgColor3 }\"></textarea>\r\n                                <p>颜色</p>\r\n                                <el-color-picker v-model=\"wordColor3\" @active-change=\"wordColorActive3\"></el-color-picker>\r\n                                <p>背景</p>\r\n                                <el-color-picker v-model=\"bgColor3\" @active-change=\"bgColorActive3\"></el-color-picker>\r\n                                <el-checkbox v-model=\"showWord3\" class=\"fix\" style=\"margin-bottom: 24px;\">文字预览</el-checkbox>\r\n                            </el-row>\r\n                        </div>\r\n\r\n                        <div class=\"generate_from_btn\">\r\n                            <el-button class=\"btn_bor_primary\" round plain @click=\"saveLocalClick\">保存本地</el-button>\r\n                            <el-popover\r\n                                placement=\"top\"\r\n                                width=\"200\"\r\n                                trigger=\"click\">\r\n                                <div class=\"popover-content\" style=\"height: 170px\">\r\n                                    <div id=\"qrCode\" class=\"qrcode\" ref=\"imgQrCodeDiv\" style=\"width: 170px;height: 170px;margin: 0 auto\"></div>\r\n                                </div>\r\n                                <el-button slot=\"reference\" class=\"btn_bor_primary\" round plain @click=\"mobileViewClick\">手机查看</el-button>\r\n                            </el-popover>\r\n                            <el-button class=\"btn_bor_primary\" round plain @click=\"previewClick\">预览</el-button>\r\n                        </div>\r\n                    </div>\r\n                </el-row>\r\n            </el-main>\r\n        </el-row>\r\n\r\n        <footers></footers>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import headers from '../../components/header.vue'\r\n    import footers from '../../components/footer.vue'\r\n\r\n    import QRCode from 'qrcodejs2';\r\n    import VueDragResize from \"vue-drag-resize\";\r\n    import html2canvas from \"html2canvas\";\r\n    import { base64StringToBlob } from 'blob-util'\r\n\r\n    import { UpImgApi } from '../../http/api.js'\r\n    export default {\r\n        data() {\r\n            return {\r\n                imgUrl: localStorage.getItem('selectedBgImg'),\r\n                tabs: ['二维码', '联系方式', '文字信息'],\r\n                tabNum: 0,\r\n                // 二维码\r\n                qrCodeColor: \"#000\",\r\n                qrCodeBgColor: \"#fff\",\r\n                qrCodeLink: \"\",\r\n                showQrCode: false,\r\n                canvasWidth: 92,\r\n                canvasHeight: 92,\r\n                // 上传按钮\r\n                showUploadBtn: true,\r\n                // 上传初始化\r\n                qn:{\r\n                    token: \"\"\r\n                },\r\n                upUrl: \"\",\r\n                // 上传成功后IMG\r\n                showContactImg: false,\r\n                contactImg: \"\",\r\n                // 文字1\r\n                word1:\"\",\r\n                wordColor1: \"red\",\r\n                bgColor1: \"\",\r\n                showWord1: false,\r\n                fontsize1: 16,\r\n                // 文字2\r\n                word2:\"\",\r\n                wordColor2: \"red\",\r\n                bgColor2: \"\",\r\n                showWord2: false,\r\n                fontsize2: 16,\r\n                // 文字3\r\n                word3:\"\",\r\n                wordColor3: \"red\",\r\n                bgColor3: \"\",\r\n                showWord3: false,\r\n                fontsize3: 16,\r\n            }\r\n        },\r\n        methods: {\r\n            // 上传初始化获取上传接口地址和token\r\n            UpImgData () {\r\n                var _this = this;\r\n                UpImgApi().then(res => {\r\n                    _this.upUrl = res.data.message.upUrl;\r\n                    _this.qn.token = res.data.message.Token\r\n                }).catch(err => {\r\n\r\n                })\r\n            },\r\n            // 初始化\r\n            bindQRCode: function () {\r\n                new QRCode(this.$refs.qrCodeDiv, {\r\n                    text: this.qrCodeLink,\r\n                    width: 92,\r\n                    height: 92,\r\n                    colorDark: this.qrCodeColor, //二维码颜色\r\n                    colorLight: \"#ff000000\", //二维码背景色\r\n                    correctLevel: QRCode.CorrectLevel.L//容错率，L/M/H\r\n                })\r\n            },\r\n            // 缩放时事件\r\n            resize(newRect) {\r\n                document.getElementsByClassName('qrcode')[0].style.width = (newRect.width - 40) + \"px\";\r\n                document.getElementsByClassName('qrcode')[0].style.height = (newRect.height - 40) + \"px\";\r\n                document.getElementsByTagName('canvas')[0].style.width = (newRect.width - 50) + \"px\";\r\n                document.getElementsByTagName('canvas')[0].style.height = (newRect.height - 50) + \"px\";\r\n                this.canvasWidth = (newRect.width - 50);\r\n                this.canvasHeight = (newRect.height - 50);\r\n            },\r\n            resizePone(newRect) {\r\n                if(newRect.width < 100){\r\n                    this.fontsize1 = 16\r\n                }else{\r\n                    var v = (newRect.width - 100) / 5\r\n                    this.fontsize1 = 16 + v\r\n                }\r\n            },\r\n            resizePtwo(newRect) {\r\n                if(newRect.width < 100){\r\n                    this.fontsize2 = 16\r\n                }else{\r\n                    var v = (newRect.width - 100) / 5\r\n                    this.fontsize2 = 16 + v\r\n                }\r\n            },\r\n            resizePthree(newRect) {\r\n                if(newRect.width < 100){\r\n                    this.fontsize3 = 16\r\n                }else{\r\n                    var v = (newRect.width - 100) / 5\r\n                    this.fontsize3 = 16 + v\r\n                }\r\n            },\r\n            // 二维码链接输入事件\r\n            qrCodeLinkInput () {\r\n                this.$refs.qrCodeDiv.innerHTML = '';\r\n                new QRCode(this.$refs.qrCodeDiv, {\r\n                    text: this.qrCodeLink,\r\n                    width: this.canvasWidth,\r\n                    height: this.canvasHeight,\r\n                    colorDark: this.qrCodeColor, //二维码颜色\r\n                    colorLight: \"#ff000000\", //二维码背景色\r\n                    correctLevel: QRCode.CorrectLevel.L//容错率，L/M/H\r\n                })\r\n            },\r\n            // 二维码颜色面板中当前显示的颜色发生改变时触发\r\n            qrCodeColorActive (val) {\r\n                this.$refs.qrCodeDiv.innerHTML = '';\r\n                new QRCode(this.$refs.qrCodeDiv, {\r\n                    text: this.qrCodeLink,\r\n                    width: this.canvasWidth,\r\n                    height: this.canvasHeight,\r\n                    colorDark: val, //二维码颜色\r\n                    colorLight: \"#ff000000\", //二维码背景色\r\n                    correctLevel: QRCode.CorrectLevel.L//容错率，L/M/H\r\n                })\r\n            },\r\n            // 二维码背景面板中当前显示的颜色发生改变时触发\r\n            qrCodeBgColorActive (val) {\r\n                this.qrCodeBgColor = val\r\n            },\r\n            // 上传触发change\r\n            handleChange(file, fileList) {\r\n                this.showUploadBtn = false\r\n            },\r\n            // 上传成功\r\n            handleSuccess(res, file) {\r\n                this.showContactImg = true;\r\n                this.contactImg = res.file_path\r\n            },\r\n            // 上传报错\r\n            handleError() {\r\n                console.log(\"error\")\r\n                this.showUploadBtn = true\r\n            },\r\n            // 删除图片\r\n            handleRemove() {\r\n                this.showUploadBtn = true;\r\n                this.contactImg = \"\"\r\n            },\r\n            // 上传图片限制格式和大小\r\n            beforeAvatarUpload(file) {\r\n                const isJPG = file.type === 'image/jpeg';\r\n                const isPNG = file.type === 'image/png'\r\n                const isLt15M = file.size / 1024 / 1024 < 200;\r\n\r\n                if (!isJPG && !isPNG) {\r\n                    this.$message.error('上传头像图片只能是 JPG 和 PNG 格式!');\r\n                }\r\n                if (!isLt15M) {\r\n                    this.$message.error('上传图片大小不能超过 200KB!');\r\n                }\r\n                return isJPG || isPNG && isLt15M;\r\n            },\r\n            // 文字颜色面板中当前显示的颜色发生改变时触发\r\n            wordColorActive1 (val) {\r\n                this.wordColor1 = val\r\n            },\r\n            bgColorActive1 (val) {\r\n                this.bgColor1 = val\r\n            },\r\n            wordColorActive2 (val) {\r\n                this.wordColor2 = val\r\n            },\r\n            bgColorActive2 (val) {\r\n                this.bgColor2 = val\r\n            },\r\n            wordColorActive3 (val) {\r\n                this.wordColor3 = val\r\n            },\r\n            bgColorActive3 (val) {\r\n                this.bgColor3 = val\r\n            },\r\n            // 保存图片\r\n            saveLocalClick(){\r\n                var dragContainer = document.getElementById(\"dragContainer\");\r\n                let opts = {\r\n                    useCORS: true,\r\n                    height: dragContainer.offsetHeight, // 下面解决当页面滚动之后生成图片出现白边问题\r\n                    width: dragContainer.offsetWidth,\r\n                    scrollX: -8,\r\n                    dpi: 300, // 处理模糊问题\r\n                    scale: 1\r\n                };\r\n                html2canvas(dragContainer,opts).then((canvas) => {\r\n                    var url = canvas.toDataURL('image/png');    \r\n                    var a = document.createElement(\"a\");\r\n                    a.href = url;\r\n                    a.download = \"推广素材\";\r\n                    document.body.appendChild(a);\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                });\r\n            },\r\n            // 手机查看\r\n            mobileViewClick () {\r\n                var _this = this;\r\n                this.$refs.imgQrCodeDiv.innerHTML = '';\r\n                var dragContainer = document.getElementById(\"dragContainer\");\r\n                let opts = {\r\n                    useCORS: true,\r\n                    height: dragContainer.offsetHeight, // 下面解决当页面滚动之后生成图片出现白边问题\r\n                    width: dragContainer.offsetWidth,\r\n                    scrollX: -8,\r\n                    dpi: 300, // 处理模糊问题\r\n                    scale: 1\r\n                };\r\n                html2canvas(dragContainer,opts).then((canvas) => {\r\n                    canvas.toBlob(function (blobObj) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"token\", _this.qn.token);\r\n                        formData.append(\"file\", blobObj);\r\n                        _this.$http.post(_this.upUrl, formData).then(res => {\r\n                            new QRCode(_this.$refs.imgQrCodeDiv, {\r\n                                text: res.data.file_path,\r\n                                width: 170,\r\n                                height: 170,\r\n                                colorDark: \"#000\", //二维码颜色\r\n                                colorLight: \"#fff\", //二维码背景色\r\n                                correctLevel: QRCode.CorrectLevel.L//容错率，L/M/H\r\n                            })\r\n                        }).catch(err => {\r\n                        })\r\n                    })\r\n                });\r\n            },\r\n            // 预览\r\n            previewClick() {\r\n                var dragContainer = document.getElementById(\"dragContainer\");\r\n                let opts = {\r\n                    useCORS: true,\r\n                    height: dragContainer.offsetHeight, // 下面解决当页面滚动之后生成图片出现白边问题\r\n                    width: dragContainer.offsetWidth,\r\n                    scrollX: -8,\r\n                    dpi: 300, // 处理模糊问题\r\n                    scale: 1\r\n                };\r\n                html2canvas(dragContainer,opts).then(function(canvas) {\r\n                    canvas.toBlob(function (blobObj) {\r\n                        console.log(blobObj)\r\n                        window.open(URL.createObjectURL(blobObj))\r\n                    })\r\n                });\r\n            },\r\n        },  \r\n        created() {\r\n            this.UpImgData();\r\n        },\r\n        mounted () {\r\n            this.$nextTick(function () {\r\n                this.bindQRCode();\r\n            });\r\n            this.qrCodeLink = localStorage.getItem('agentLink')\r\n        },\r\n        components:{\r\n            headers,\r\n            footers,\r\n            VueDragResize\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    @import '../../assets/css/promotionZone.css';\r\n</style>"]}]}