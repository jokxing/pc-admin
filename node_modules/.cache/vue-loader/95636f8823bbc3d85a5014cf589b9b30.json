{"remainingRequest":"D:\\vue3\\bf_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue3\\bf_admin\\src\\views\\home\\home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue3\\bf_admin\\src\\views\\home\\home.vue","mtime":1594455127214},{"path":"D:\\vue3\\bf_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue3\\bf_admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue3\\bf_admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vue3\\bf_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue3\\bf_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGluZGV4SW5mb0FwaSxpbmRleFJlcG9ydEFwaSB9IGZyb20gJy4uLy4uL2h0dHAvYXBpLmpzJwpleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhKCkgewogICAgICAgIHZhciBteURhdGUgPSBuZXcgRGF0ZSgpOwogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGRhdGFMb2FkaW5nOiB0cnVlLAogICAgICAgICAgICByZXBvckxvYWRpbmc6IHRydWUsCiAgICAgICAgICAgIGNvbnRlbnQ6ICfmlrDms6jlhozlrZjmrL7ph5Hpop3vvJrml7bpl7TmrrXlhoXms6jlhoznlKjmiLfnmoTntK/orqHlrZjmrL7ph5Hpop0nICsgJ1xuJyArICfogIHnlKjmiLflrZjmrL7ph5Hpop3vvJrmiYDpgInml7bpl7TkuYvliY3ms6jlhoznlKjmiLcs5Zyo5b2T5YmN5omA6YCJ5pe26Ze05YaF5a2Y5qy+55qE6YeR6aKdJyArICdcbicgKyAn6aaW5a2Y6YeR6aKd77ya5omA6YCJ5pe26Ze05YaF5rOo5YaM55So5oi355qE6aaW5qyh5a2Y5qy+6YeR6aKdJyArICdcbicgKyAn5oC75a2Y5qy+6YeR6aKd77ya5omA6YCJ5pe26Ze05YaF55So5oi355qE57Sv6K6h5a2Y5qy+6YeR6aKdJyArICdcbicgKyAn5oqV5rOo6YeR6aKd77ya5omA6YCJ5pe26Ze05YaF55So5oi355qE57Sv6K6h5oqV5rOo6YeR6aKdJyArICdcbicgKyAn5pyJ5pWI5oqV5rOo77ya5omA6YCJ5pe26Ze05YaF55So5oi355qE57Sv6K6h5pyJ5pWI5oqV5rOo6YeR6aKdJyArICdcbicgKyAn6L6T6LWi77ya5omA6YCJ5pe26Ze05YaF55So5oi355qE57Sv6K6h6L6T6LWiJywKICAgICAgICAgICAgbW9udGg6IG15RGF0ZS5nZXRGdWxsWWVhcigpICsgIi0iICsgKG15RGF0ZS5nZXRNb250aCgpICsgMSksCiAgICAgICAgICAgIG9wdGlvbjogewogICAgICAgICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBncmlkOiB7CiAgICAgICAgICAgICAgICAgICAgbGVmdDogMCwKICAgICAgICAgICAgICAgICAgICByaWdodDogMjAsCiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAyMCwKICAgICAgICAgICAgICAgICAgICB0b3A6IDUwLAogICAgICAgICAgICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHRvb2xib3g6IHsKICAgICAgICAgICAgICAgICAgICBmZWF0dXJlOiB7fQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHhBeGlzOiB7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgICAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogW10KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB5QXhpczogewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6J+W9k+aciCcsCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6J2xpbmUnLAogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyM1QzdERUMnLAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBbXSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTon5LiK5pyIJywKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTonbGluZScsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiIzAwYzAxYyIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6W10KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRhdGFUYWI6IFsn6L6T6LWi6YeR6aKdJywn5paw5rOo5YaM5Lq65pWwJywn5a2Y5o+Q5qy+6YeR6aKdJywn5a2Y5o+Q5qy+5Lq65pWwJywn5oqV5rOo6YeR6aKdJ10sCiAgICAgICAgICAgIGRhdGFUYWJOdW06IDAsCiAgICAgICAgICAgIGRhdGFUYWJOYW1lOiAi6L6T6LWi6YeR6aKdIiwKICAgICAgICAgICAgLy8g6aaW6aG1LeaVsOaNruWxleekugogICAgICAgICAgICBob21lRGF0YToge30sCiAgICAgICAgICAgIC8vIOmmlumhtS3miqXooagKICAgICAgICAgICAgaG9tZURlcG9ydERhdGE6ICcnLAogICAgICAgICAgICBob21lRGVwb3J0OiAiIgogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLy8g5pWw5o2uCiAgICAgICAgaW5kZXhJbmZvRGF0YSAoKSB7CiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgICAgICAgIGluZGV4SW5mb0FwaSgpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIF90aGlzLmRhdGFMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfdGhpcy5ob21lRGF0YSA9IHJlcy5kYXRhLm1lc3NhZ2U7CiAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB7CiAgICAgICAgICAgICAgICBfdGhpcy5kYXRhTG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgLy8g5oql6KGoCiAgICAgICAgaW5kZXhSZXBvcnREYXRhIChpbmRleCkgewogICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICAgICAgICB0aGlzLnJlcG9yTG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgIGluZGV4UmVwb3J0QXBpKF90aGlzLm1vbnRoKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICBfdGhpcy5yZXBvckxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIF90aGlzLmhvbWVEZXBvcnREYXRhID0gcmVzLmRhdGEubWVzc2FnZTsKICAgICAgICAgICAgICAgIGlmKF90aGlzLmRhdGFUYWJOdW0gPT0gMCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzLmhvbWVEZXBvcnQgPSBfdGhpcy5ob21lRGVwb3J0RGF0YS53aW5Db3VudAogICAgICAgICAgICAgICAgfWVsc2UgaWYoX3RoaXMuZGF0YVRhYk51bSA9PSAxKXsKICAgICAgICAgICAgICAgICAgICBfdGhpcy5ob21lRGVwb3J0ID0gX3RoaXMuaG9tZURlcG9ydERhdGEubmV3UmVnQ291bnQKICAgICAgICAgICAgICAgIH1lbHNlIGlmKF90aGlzLmRhdGFUYWJOdW0gPT0gMil7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMuaG9tZURlcG9ydCA9IF90aGlzLmhvbWVEZXBvcnREYXRhLmRyYXdEZXBNb25leUNvdW50CiAgICAgICAgICAgICAgICB9ZWxzZSBpZihfdGhpcy5kYXRhVGFiTnVtID09IDMpewogICAgICAgICAgICAgICAgICAgIF90aGlzLmhvbWVEZXBvcnQgPSBfdGhpcy5ob21lRGVwb3J0RGF0YS5kcmF3RGVwVXNlckNvdW50CiAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICBfdGhpcy5ob21lRGVwb3J0ID0gX3RoaXMuaG9tZURlcG9ydERhdGEuQmVhdENvdW50CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB7CiAgICAgICAgICAgICAgICBfdGhpcy5yZXBvckxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIC8vIHRhYgogICAgICAgIGRhdGFUYWJDbGljayAoaXRlbSxpbmRleCkgewogICAgICAgICAgICB0aGlzLmRhdGFUYWJOYW1lID0gaXRlbTsKICAgICAgICAgICAgdGhpcy5kYXRhVGFiTnVtID0gaW5kZXg7CiAgICAgICAgICAgIGlmKGluZGV4ID09IDApIHsKICAgICAgICAgICAgICAgIHRoaXMuaG9tZURlcG9ydCA9IHRoaXMuaG9tZURlcG9ydERhdGEud2luQ291bnQKICAgICAgICAgICAgfWVsc2UgaWYoaW5kZXggPT0gMSl7CiAgICAgICAgICAgICAgICB0aGlzLmhvbWVEZXBvcnQgPSB0aGlzLmhvbWVEZXBvcnREYXRhLm5ld1JlZ0NvdW50CiAgICAgICAgICAgIH1lbHNlIGlmKGluZGV4ID09IDIpewogICAgICAgICAgICAgICAgdGhpcy5ob21lRGVwb3J0ID0gdGhpcy5ob21lRGVwb3J0RGF0YS5kcmF3RGVwTW9uZXlDb3VudAogICAgICAgICAgICB9ZWxzZSBpZihpbmRleCA9PSAzKXsKICAgICAgICAgICAgICAgIHRoaXMuaG9tZURlcG9ydCA9IHRoaXMuaG9tZURlcG9ydERhdGEuZHJhd0RlcFVzZXJDb3VudAogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgIHRoaXMuaG9tZURlcG9ydCA9IHRoaXMuaG9tZURlcG9ydERhdGEuQmVhdENvdW50CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICB2YXIgbXlEYXRlID0gbmV3IERhdGUoKTsKICAgICAgICB2YXIgZGF0ZSA9IG15RGF0ZS5nZXREYXRlKCk7CiAgICAgICAgZm9yKHZhciBpPTE7IGk8PWRhdGU7IGkrKyl7CiAgICAgICAgICAgIHRoaXMub3B0aW9uLnhBeGlzLmRhdGEucHVzaChpICsgIuaXpSIsKQogICAgICAgIH0KICAgICAgICB0aGlzLmluZGV4UmVwb3J0RGF0YSgpCiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB2YXIgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hhcnRMaW5lJykpOwogICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKHRoaXMub3B0aW9uKTsKCiAgICAgICAgdGhpcy5pbmRleEluZm9EYXRhKCkKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGhvbWVEZXBvcnQ6IHsKICAgICAgICAgICAgaGFuZGxlciAobmV3VmFsLCBvbGRWYWwpIHsKICAgICAgICAgICAgICAgIHZhciBteURhdGUgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICAgICAgdmFyIGRhdGUgPSBteURhdGUuZ2V0RGF0ZSgpOwogICAgICAgICAgICAgICAgdmFyIGRhdGVBcnIgPSBbXQogICAgICAgICAgICAgICAgZm9yKHZhciBpPTE7IGk8PWRhdGU7IGkrKyl7CiAgICAgICAgICAgICAgICAgICAgZGF0ZUFyci5wdXNoKGkgKyAi5pelIiwpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZih0aGlzLmhvbWVEZXBvcnQgaW5zdGFuY2VvZiBBcnJheSl7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb24gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZ3JpZDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAyMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogMjAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDUwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIHRvb2xib3g6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmU6IHt9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIHhBeGlzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm91bmRhcnlHYXA6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0ZUFycgogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICB5QXhpczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOidsaW5lJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyM1QzdERUMnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMuaG9tZURlcG9ydCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICBpZih0aGlzLmRhdGFUYWJOYW1lID09ICflrZjmj5DmrL7ph5Hpop0nKXsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb24gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6Wyflj5bmrL7ph5Hpop0nLCflrZjmrL7ph5Hpop0nXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdyaWQ6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAyMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3R0b206IDIwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogNTAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9vbGJveDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmU6IHt9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgeEF4aXM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRlQXJyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgeUF4aXM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAndmFsdWUnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiflj5bmrL7ph5Hpop0nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOidsaW5lJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjNUM3REVDJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogdGhpcy5ob21lRGVwb3J0LmRyYXcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6J+WtmOasvumHkeminScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6J2xpbmUnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyMwMGMwMWMnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLmhvbWVEZXBvcnQuZHB0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5kYXRhVGFiTmFtZSA9PSAn5a2Y5o+Q5qy+5Lq65pWwJyl7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub3B0aW9uID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOlsn5Y+W5qy+5Lq65pWwJywn5a2Y5qy+5Lq65pWwJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBncmlkOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodDogMjAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAyMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDUwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvb2xib3g6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZWF0dXJlOiB7fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhBeGlzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0ZUFycgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHlBeGlzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcmllczogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTon5Y+W5qy+5Lq65pWwJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTonbGluZScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzVDN0RFQycsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMuaG9tZURlcG9ydC5kcmF3LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiflrZjmrL7kurrmlbAnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOidsaW5lJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMDBjMDFjJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogdGhpcy5ob21lRGVwb3J0LmRwdCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdmFyIG15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NoYXJ0TGluZScpKTsKICAgICAgICAgICAgICAgIG15Q2hhcnQuY2xlYXIoKQogICAgICAgICAgICAgICAgbXlDaGFydC5zZXRPcHRpb24odGhpcy5vcHRpb24pOwogICAgICAgICAgICB9LAogICAgICAgICAgICBkZWVwOiB0cnVlCiAgICAgICAgfQogICAgfSwKfQo="},null]}